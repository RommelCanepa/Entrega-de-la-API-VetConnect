// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VetConnectAPI.Data;

#nullable disable

namespace VetConnectAPI.Migrations
{
    [DbContext(typeof(VetConnectDbContext))]
    partial class VetConnectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VetConnectAPI.Models.Cita", b =>
                {
                    b.Property<int>("IdCita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCita"));

                    b.Property<int>("IDMascota")
                        .HasColumnType("int");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IDVeterinario")
                        .HasColumnType("int");

                    b.HasKey("IdCita");

                    b.HasIndex("IDMascota");

                    b.HasIndex("IDUsuario");

                    b.HasIndex("IDVeterinario");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("VetConnectAPI.Models.HistorialCita", b =>
                {
                    b.Property<int>("IDHistorialCitas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDHistorialCitas"));

                    b.Property<DateTime>("FechaRealizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDCita")
                        .HasColumnType("int");

                    b.Property<int>("IDServicio")
                        .HasColumnType("int");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("int");

                    b.HasKey("IDHistorialCitas");

                    b.HasIndex("IDCita");

                    b.HasIndex("IDServicio");

                    b.HasIndex("IDUsuario");

                    b.ToTable("HistorialCitas");
                });

            modelBuilder.Entity("VetConnectAPI.Models.Mascota", b =>
                {
                    b.Property<int>("IdMascota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMascota"));

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Propietario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMascota");

                    b.HasIndex("IDUsuario");

                    b.ToTable("Mascotas");
                });

            modelBuilder.Entity("VetConnectAPI.Models.ServicioVeterinario", b =>
                {
                    b.Property<int>("IDServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDServicio"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IDServicio");

                    b.ToTable("ServiciosVeterinarios");
                });

            modelBuilder.Entity("VetConnectAPI.Models.Usuario", b =>
                {
                    b.Property<int>("IDUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDUsuario"));

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreMascota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("VetConnectAPI.Models.Veterinario", b =>
                {
                    b.Property<int>("IDVeterinario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDVeterinario"));

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDVeterinario");

                    b.ToTable("Veterinarios");
                });

            modelBuilder.Entity("VetConnectAPI.Models.Cita", b =>
                {
                    b.HasOne("VetConnectAPI.Models.Mascota", "Mascota")
                        .WithMany("Citas")
                        .HasForeignKey("IDMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VetConnectAPI.Models.Usuario", "Usuario")
                        .WithMany("Citas")
                        .HasForeignKey("IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VetConnectAPI.Models.Veterinario", "Veterinario")
                        .WithMany("Citas")
                        .HasForeignKey("IDVeterinario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("Usuario");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("VetConnectAPI.Models.HistorialCita", b =>
                {
                    b.HasOne("VetConnectAPI.Models.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("IDCita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VetConnectAPI.Models.ServicioVeterinario", "ServicioVeterinario")
                        .WithMany("HistorialCitas")
                        .HasForeignKey("IDServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VetConnectAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("ServicioVeterinario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("VetConnectAPI.Models.Mascota", b =>
                {
                    b.HasOne("VetConnectAPI.Models.Usuario", "Usuario")
                        .WithMany("Mascotas")
                        .HasForeignKey("IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("VetConnectAPI.Models.Mascota", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("VetConnectAPI.Models.ServicioVeterinario", b =>
                {
                    b.Navigation("HistorialCitas");
                });

            modelBuilder.Entity("VetConnectAPI.Models.Usuario", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("VetConnectAPI.Models.Veterinario", b =>
                {
                    b.Navigation("Citas");
                });
#pragma warning restore 612, 618
        }
    }
}
